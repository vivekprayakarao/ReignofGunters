<?xml version="1.0"?>

<launch>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="x" default="1.000"/>
  <arg name="y" default="0.250"/>

  <param name="robot_description" command="$(find xacro)/xacro.py '$(find adventure_description)/finn/finn.urdf.xacro'" />
  <node name="finn_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
        args="-urdf -model finn -param robot_description -x $(arg x) -y $(arg y) -z 0.2 -R 0.0 -P 0.0 -Y 0.0"/>

  <!-- Arm -->
  <node name="arbotix" pkg="arbotix_python" type="arbotix_driver" output="screen">
      <param name="port" value="$(env ARM)"/>
      <rosparam file="$(find adventure_arm_bringup)/config/arm.yaml" command="load" />
      <param name="sim" value="true"/>
  </node>

  <node name="gripper_controller" pkg="arbotix_controllers" type="gripper_controller">
       <rosparam file="$(find adventure_arm_bringup)/config/gripper.yaml" command="load" />
  </node>

  <!-- publish all the frames to TF -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
    <param name="publish_frequency" value="50"/>
  </node>
  
  <!-- source that publishes the joint positions as a sensor_msgs/JointState 
  <param name="use_gui" value="true"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  -->

  <!-- Velocity muxer -->
  <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="cmd_vel_mux"
        args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
    <param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml" />
    <remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
  </node>

  <!-- Bumper/cliff to pointcloud (not working, as it needs sensors/core messages) -->
  <include file="$(find turtlebot_bringup)/launch/includes/kobuki/bumper2pc.launch.xml"/>
</launch>
